######
# Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
#
# 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
#
# By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
######

target = 4000000


class fib:
    __slots__ = ['pos', 'i', 'j', 'total']

    def __init__(self):
        self.pos = 2
        self.i = 1
        self.j = 2

        # Sum of even fibonacci numbers up to current position
        self.total = 2

    def incr(self):
        temp = self.i + self.j
        self.i = self.j
        self.j = temp

        self.pos += 1

        if self.j % 2 == 0:
            self.total += self.j

        # print("{:>10} = {:<20}total = {}".format("f_{}".format(self.pos), self.j, self.total))


# run
f = fib()
total = 0

while f.j <= target:
    total = f.total
    f.incr()

print("Sum of even fibonnaci numbers not exceeding {} (up to f_{}) = {}".format(target, f.pos, f.total))
